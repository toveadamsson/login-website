{"version":3,"sources":["components/header.js","config.js","components/register.js","components/secret-page.js","components/login.js","components/logout.js","components/useToken.js","components/privateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Header","isLoggedIn","className","to","URL","window","location","hostname","dotenv","config","Register","useState","name","email","password","password2","formValues","setValues","history","useHistory","a","fetch","method","headers","body","JSON","stringify","then","data","json","jsonResult","console","log","onSubmit","event","preventDefault","errorMessages","match","push","length","alert","registerUser","required","value","onChange","target","placeholder","id","type","SecretPage","deleteToken","onClick","Login","setToken","setEmail","setPassword","loginUser","handleSubmit","success","token","e","eye","icon","faEye","Logout","useForm","register","ref","useToken","tokenString","sessionStorage","getItem","parse","getToken","userToken","setItem","removeItem","PrivateRoute","children","rest","render","pathname","state","from","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f901546f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction Header({isLoggedIn}) {\n\n  return (\n    <div className=\"header-container\">\n      <h1>Website-name</h1>\n      <div className=\"header-buttons\">\n        {!isLoggedIn && (\n          <>\n            <Link to=\"/\">\n              <button>LOGIN</button>\n            </Link>\n            <Link to=\"/register\">\n              <button>REGISTER</button>\n            </Link>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","// https://serene-bayou-41251.herokuapp.com/\n\nconst URL = window.location.hostname === `localhost`\n            ? `http://localhost:8080`\n            : `https://login-website-ta.herokuapp.com`\n            \nexport { URL }","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport dotenv from \"dotenv\";\nimport { URL } from \"../config\"\ndotenv.config()\n\nfunction Register() {\n  const [formValues, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n  let history = useHistory();\n\n  async function registerUser({ name, email, password }) {\n    // this is an async function because we don't know how long it's going to take for the operation to finish.\n    // credentials are the user input, email and password.\n  \n  // const baseUrl = process.env.REACT_APP_API_BASE_URL || process.env.API_BASE_URL || \"https://login-website-neon.vercel.app\"\n    // return fetch(`${baseUrl}:8080/register`, {\n      return fetch(`${URL}/register`, {\n      // fetch=make request/send request somewhere, in this case, the localhost...\n      method: \"POST\", // different ways of sending the requested data. Get, Delete etc\n      headers: {\n        \"Content-Type\": \"application/json\", // we clarify that we are sending a json form\n      },\n      body: JSON.stringify({ name, email, password }), // We are transforming what we are sending to JSON\n    }).then((data) => {\n      // return a promise\n      data.json().then((jsonResult) => {\n        console.log(jsonResult);\n      });\n      // return data.json();\n    }); //the object provided from res.send(containing the key \"token\")\n    // data = it's what we know from the server.js, register endpoint. res.send({})\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); // by adding preventDefault, we are preventing the browser from making a request with the information in the form.\n    let errorMessages = [];\n    let regex = /^[A-Za-z]\\w{5,17}$/;\n    if (formValues.password.match(regex) === null) {\n      errorMessages.push(\n        \"password needs to contain one lower case, one upper case and between 6-16 characters\"\n      );\n    }\n    if (!(formValues.password === formValues.password2)) {\n      errorMessages.push(\"passwords does not match\");\n    }\n    console.log(\"error message containing:\", errorMessages);\n\n    if (errorMessages.length > 0) {\n      alert(errorMessages);\n    } else {\n      // registerUser({name: formValues.name, email: formValues.email, password: formValues.password});\n      registerUser({...formValues});\n      alert(\"registration successful\")\n      history.push(\"./\");\n      // we are now connecting to the backend\n      // send a req to the endpoint in the backend\n    }\n  };\n\n  return (\n    <form className=\"register-container\" onSubmit={handleSubmit}>\n      <input\n        required\n        value={formValues.name}\n        // onChange={(e) => setName(e.target.value)}\n        onChange={(event) =>\n          setValues({ ...formValues, name: event.target.value })\n        }\n        // onChange property allows us to manage whatever happens when the text in the input is changing, when the user writes.\n        // to get the input from the user, we define a function, in this case it's the event. So everytime this function is called, we get an event ( every key the user presses ).\n        // setValues will be updating the name-value to a new name-value.\n        placeholder=\"Name *\"\n        id=\"name\"\n      ></input>\n      <input\n        type=\"email\"\n        required\n        value={formValues.email}\n        // onChange={(e) => setEmail(e.target.value)}\n        onChange={(event) =>\n          setValues({ ...formValues, email: event.target.value })\n        }\n        placeholder=\"Email *\"\n        id=\"email\"\n      ></input>\n      <input\n        type=\"password\"\n        value={formValues.password}\n        // onChange={(e) => setPassword(e.target.value)}\n        onChange={(event) =>\n          setValues({ ...formValues, password: event.target.value })\n        }\n        placeholder=\"Enter Password *\"\n        id=\"password\"\n      ></input>\n      <input\n        type=\"password\"\n        value={formValues.password2}\n        // onChange={(e) => setPassword2(e.target.value)}\n        onChange={(event) =>\n          setValues({ ...formValues, password2: event.target.value })\n        }\n        placeholder=\"Repeat Password *\"\n        id=\"password2\"\n      ></input>\n      <button type=\"submit\">REGISTER</button>\n    </form>\n  );\n}\n\nexport default Register;\n\n// check that the username has valid characters, length, minimum characters.\n// email, check that the format is the right one, contains @ and the \".\"\n// password, check for upper/lower case, numbers and a special character.\n// check if values of password and repeat password are identical. if not, send alert \"no match\"\n\n// store the users 4 inputs in the state of register component.\n//\n\n// const [values, setValues] = useState({\n//   username:\"\",\n//   email: \"\",\n//   password: \"\",\n//   repeatPassword:\"\"\n// })\n\n// const onSubmit = async (event) => {\n//   event.preventDefault(); // Prevent default submission\n//   try {\n//     await saveFormData();\n//     alert('Your registration was successfully submitted!');\n//     setValues({\n//       name: '', color: '', age: '', habits: ''\n//     });\n//   } catch (e) {\n//     alert(`Registration failed! ${e.message}`);\n//   }\n// }\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\n\nfunction SecretPage({deleteToken}) {\n  // const { deleteToken } = useToken();\n  let history = useHistory();\n  // add deletetoken.\n\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    console.log(\"click\");\n    deleteToken();\n    history.push(\"./\");\n  };\n  return (\n    <div className=\"secret-container\">\n      <h1>You have successfully accessed the secret page!</h1>\n      <button onClick={handleClick}>Logout</button>\n    </div>\n  );\n}\nexport default SecretPage;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n// import useToken from \"./useToken.js\";\nimport { URL } from '../config'\nimport dotenv from \"dotenv\";\ndotenv.config()\n\n\nfunction Login({setToken}) {\n  // const { setToken } = useToken();\n  // we are using this useToken hook in both login.js and app.js and they are both creating a separate state, and are not connected. \n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  let history = useHistory();\n// ======================================\n  async function loginUser({email, password}) {\n    // credentials is the {email, password} from below\n    // console.log(JSON.stringify({ email, password}));\n    // credentials are the user input, email and password.\n\n    // const baseUrl = process.env.REACT_APP_API_BASE_URL || process.env.API_BASE_URL || \"https://login-website-neon.vercel.app\"\n\n    // console.log(baseUrl)\n    // baseUrl is teh base url for the endpoints.\n    console.log('URL', URL) ;\n    return fetch(`${URL}/login`, {\n      // return fetch(`${baseUrl}:8080/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({email, password}),\n    }).then((data) => { return data.json()}); //the object provided from res.send(containing the property \"token\" and \"success\") data = token and success. could also be written as data.json()\n  }\n  // handleSubmit will call loginUser with the email and password, it will saveToken if it's success. (in this case, prefixed test321)\n\n\n  // (event) is the paramater that receives an object with the event that got triggered, in this case it's the submit event in the form.\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    // destructuring {token, success} =>\n    const {success, token} = await loginUser({\n      email,\n      password,\n      // id eventually password.hash\n    });\n\n    if (success){\n      alert(\"Login successful\")\n      setToken(token);\n      history.push(\"./secret-page\");\n  }else{\n    alert(\"Either email or password is wrong or there is no member with this email\")\n\n  }\n  };\n\n  return (\n    <div className=\"front-container\">\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          onChange={(e) => setEmail(e.target.value)} //triggered by the user input\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={(e) => setPassword(e.target.value)} //triggered by the user input\n        />\n        {/* by adding submit, does this trigger handleSubmit always? */}\n        <button type=\"submit\">LOGIN</button> \n        {/* when a button has the type submit inside a form, it triggers an event, that is the submitevent, onSubmit(should be in the form tag). */}\n      </form>\n      \n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n// import \"./App.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nconst eye = <FontAwesomeIcon icon={faEye} />;\n\nexport default function Logout() {\n  const { register, handleSubmit } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return (\n    <div className=\"App\">\n      <input\n        name=\"username\"\n        type=\"text\"\n        placeholder=\"Username\"\n        ref={register({ required: \"This is required.\" })}\n      />\n      <div className=\"pass-wrapper\">\n        <input\n          placeholder=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          ref={register({ required: \"This is required.\" })}\n        />\n        <i>{eye}</i>\n      </div>\n      <button type=\"submit\" onClick={handleSubmit(onSubmit)}>\n        Submit\n      </button>\n    </div>\n  );\n}","//UseToken.js\nimport { useState } from 'react';\n\nexport default function useToken() {\n  const getToken = () => {\n    const tokenString = sessionStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    sessionStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken);\n  };\n  const deleteToken = () => {\n    sessionStorage.removeItem('token');\n    setToken(null);\n  };\n\n  return {\n    setToken: saveToken,\n    deleteToken,\n    token\n  }\n}","// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport useToken from \"./useToken.js\";\n\nconst PrivateRoute = ({ children, ...rest }) => {\n  // Add your own authentication on the below line.\n  const { token } = useToken();\n\n  return (\n    // If authentic: they proceed to the page,\n// If not: they are redirected to the login page.\n    <Route\n      {...rest}\n      render={({location}) =>\n        token ? (\n          children \n        ) : (\n          <Redirect\n            to={{ pathname: \"/\", state: { from: location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\n\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n//*==============================\nimport Header from \"./components/header.js\";\nimport Register from \"./components/register.js\";\nimport SecretPage from \"./components/secret-page.js\";\nimport Login from \"./components/login.js\";\nimport Logout from \"./components/logout.js\"\nimport PrivateRoute from \"./components/privateRoute.js\";\n//*==============================\nimport \"./App.css\";\n//*======================== \nimport useToken from \"./components/useToken.js\";\n//*==============================\n\nfunction App() {\n  const { deleteToken, setToken, token } = useToken();\n\n  // truthy values\n  // falsy values: undefined, null, 0...\n  const isLoggedIn = token !== null;\n  // const isLoggedIn = boolean(token)\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header isLoggedIn={isLoggedIn} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Login setToken={setToken} />\n            {/* passing saveToken here to the login so that they are using the same hook (using the same state, from useToken). Always think which component is connected to which. In this case, from App to Login. And Header is only depended on the variable isLoggedIn from the App.js */}\n          </Route>\n          <Route exact path=\"/register\">\n            <Register />\n          </Route>\n          <Route exact path=\"/logout\">\n            <Logout />\n          </Route>\n          <PrivateRoute exact path=\"/secret-page\">\n            <SecretPage deleteToken={deleteToken} />\n          </PrivateRoute>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}